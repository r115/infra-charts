on:
  push:
    branches:
      - master
      - main
    paths:
      - '.github/workflows/deploy-core-cluster-dependencies.yaml'
      - 'utilities/**'

jobs:
  utility_installation:
    name: Deploy Kubernetes utilties
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.DIGITALOCEAN_K8S_CLUSTER_ID }}

    - name: Install Helm
      uses: azure/setup-helm@v3

    # - name: Install ArgoCD
    #   run: helm repo add argo https://argoproj.github.io/argo-helm && helm repo update && helm upgrade --install argocd argo/argo-cd --namespace argocd --create-namespace --set server.service.type=ClusterIP --set redis.enabled=true --set crds.keep=false --set server.extraArgs={--insecure}

    - name: Install contour
      run: helm repo add bitnami https://charts.bitnami.com/bitnami && helm repo update && helm upgrade --install contour bitnami/contour --namespace projectcontour --create-namespace

    # - name: Install sealed secrets
    #   run: helm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets && helm repo update && helm upgrade --install sealed-secrets -n kube-system --set-string fullnameOverride=sealed-secrets-controller sealed-secrets/sealed-secrets

    - name: Add repo secret for argocd
      run: kubectl apply -f $GITHUB_WORKSPACE/utilities/argocd/secrets.github-repos.yaml

    - name: Ingress config for argocd
      run: kubectl apply -f $GITHUB_WORKSPACE/utilities/argocd/ingress.yaml

    # - name: Install cert manager
    #   run: helm repo add jetstack https://charts.jetstack.io && helm repo update && helm upgrade --install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.12.2 --set installCRDs=true

    - name: LE Issuer
      run: kubectl apply -f $GITHUB_WORKSPACE/utilities/cert-manager/issuer.yaml

    - name: Add repo secret for postgres
      run: kubectl apply -f $GITHUB_WORKSPACE/utilities/postgresql/tls.yaml && kubectl apply -f $GITHUB_WORKSPACE/utilities/postgresql/credentials.yaml

    - name: Add dockerhub secrets for carbonbits
      run: kubectl apply -f $GITHUB_WORKSPACE/utilities/dockerhub/carbonbits-credentials.yaml